HIF003
--
-- Copyright (C) 1988-2002 Altera Corporation
-- Any megafunction design, and related net list (encrypted or decrypted),
-- support information, device programming or simulation file, and any other
-- associated documentation or information provided by Altera or a partner
-- under Altera's Megafunction Partnership Program may be used only to
-- program PLD devices (but not masked PLD devices) from Altera.  Any other
-- use of such megafunction design, net list, support information, device
-- programming or simulation file, or any other related documentation or
-- information is prohibited for any other purpose, including, but not
-- limited to modification, reverse engineering, de-compiling, or use with
-- any other silicon devices, unless such use is explicitly licensed under
-- a separate agreement with Altera or a megafunction partner.  Title to
-- the intellectual property, including patents, copyrights, trademarks,
-- trade secrets, or maskworks, embodied in any such megafunction design,
-- net list, support information, device programming or simulation file, or
-- any other related documentation or information provided by Altera or a
-- megafunction partner, remains with Altera, the megafunction partner, or
-- their respective licensors.  No other licenses, including any licenses
-- needed under any third party's intellectual property, are provided herein.
--
-- Warning: do not edit this file!
--
FILES
{
}
TREE
{
	pipeline::(0,0):(0): pipeline.gdf
	{
		id-ex::(0,0):(4): id-ex.gdf
		{
			lpm_dff::(0,0):(1): lpm_dff.tdf;
			lpm_dff::(0,0):(30): lpm_dff.tdf;
			lpm_dff::(0,0):(14): lpm_dff.tdf;
			lpm_dff::(0,0):(29): lpm_dff.tdf;
			register::(0,0):(13): register.gdf;
			register::(0,0):(25): register.gdf;
			register::(0,0):(12): register.gdf;
		}
		forwardlogic::(0,0):(10): forwardlogic.vhd;
		mem::(0,0):(13): mem.gdf
		{
			dataram::(0,0):(10): dataram.gdf
			{
				lpm_ram_dq::(0,0):(1): lpm_ram_dq.tdf;
			}
		}
		ex-mem::(0,0):(21): ex-mem.gdf;
		mem-wb::(0,0):(23): mem-wb.gdf
		{
			lpm_dff::(0,0):(5): lpm_dff.tdf;
			register::(0,0):(12): register.gdf;
			register::(0,0):(13): register.gdf;
		}
		ex::(0,0):(24): ex.gdf
		{
			32alu::(0,0):(7): 32alu.gdf;
			mux2_32::(0,0):(9): mux2_32.gdf;
			mux2_5::(0,0):(11): mux2_5.gdf;
			mux3_32::(0,0):(24): mux3_32.gdf
			{
				lpm_mux::(0,0):(1): lpm_mux.tdf;
			}
			mux3_32::(0,0):(25): mux3_32.gdf
			{
				lpm_mux::(0,0):(1): lpm_mux.tdf;
			}
		}
		wb::(0,0):(25): wb.gdf;
		id::(0,0):(42): id.gdf
		{
			lpm_mux::(0,0):(61): lpm_mux.tdf;
			0::(0,0):(60): 0.gdf;
			ctrlunit::(0,0):(37): ctrlunit.vhd;
			registerfile::(0,0):(35): registerfile.gdf;
			mux2_32::(0,0):(21): mux2_32.gdf;
			subber::(0,0):(8): subber.gdf;
			32adder::(0,0):(7): 32adder.gdf;
			signextend::(0,0):(5): signextend.gdf;
		}
		if::(0,0):(48): if.gdf
		{
			register::(0,0):(2): register.gdf;
			pcadder::(0,0):(5): pcadder.gdf;
			instram::(0,0):(14): instram.gdf
			{
				lpm_ram_dq::(0,0):(5): lpm_ram_dq.tdf;
				4::(0,0):(8): 4.gdf;
			}
			mux2_32::(0,0):(17): mux2_32.gdf;
		}
		if-id::(0,0):(51): if-id.gdf;
	}
}
